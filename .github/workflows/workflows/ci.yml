name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          fi
          # Install dev tools either from requirements-dev.txt or fallback to install minimal set
          if [ -f requirements-dev.txt ]; then
            python -m pip install -r requirements-dev.txt
          else
            python -m pip install ruff black isort mypy pytest
          fi

      - name: Ruff (lint)
        run: |
          # If you prefer ruff format-checking use `ruff check .` (risky on large repos)
          ruff check .

      - name: Black format check
        run: |
          black --check .

      - name: isort check
        run: |
          isort --check-only .

      - name: mypy (type checking)
        run: |
          # skip if no pyproject/mypy config present, but mypy will exit non-zero on errors
          mypy .

      - name: Tests (pytest)
        run: |
          pytest -q
